创建单元测试用例文件*_test.go(文件名必须是*_test.go的类型,*代表要测试的文件名,函数名必须以Test开头如:TestXxx或Test_xxx)

测试所有的文件 go test,将对当前目录下的所有*_test.go文件进行编译并自动运行测试

测试某个文件使用"-file"参数.go test –file *.go .例如:go test -file mysql_test.go,"-file"参数不是必须的,
可以省略,如果你输入go test b_test.go也会得到一样的效果

测试某个方法 go test -run='Test_xxx'
"-v" 参数 go test -v ... 表示无论用例是否测试通过都会显示结果,不加"-v"表示只显示未通过的用例结果

进行所有go文件的benchmark测试 go test -bench=".*" 或 go test . -bench=".*"
对某个go文件进行benchmark测试 go test mysql_b_test.go -bench=".*"


单个测试
文件名必须是_test.go结尾的,这样在执行go test的时候才会执行到相应的代码
你必须import testing这个包
所有的测试用例函数必须是Test开头 测试用例会按照源代码中写的顺序依次执行
测试格式：func TestXxx(t *testing.T),Xxx部分可以为任意的字母数字的组合,但是首字母不能是小写字母[a-z],例如Testintdiv是错误的函数名。
函数中通过调用testing.T的Error, Errorf, FailNow, Fatal,FatalIf方法,说明测试不通过,调用Log方法用来记录测试的信息。